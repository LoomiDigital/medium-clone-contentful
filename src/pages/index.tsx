import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import { GetStaticProps } from "next";
import {
  IAuthorFields,
  IHeroHeaderFields,
  IPost,
  IPostFields,
} from "@d20/contentful/types/generated/contentful";

import Header from "@d20/components/Header";
import Banner from "@d20/components/Banner";
import client from "@d20/contentful/client";

interface HomeProps {
  heroHeader: IHeroHeaderFields;
  posts: IPost[];
}

export default function Home({
  posts,
  heroHeader: { heading, subheading, logo },
}: HomeProps) {
  return (
    <div className="max-w-7xl mx-auto">
      <Head>
        <title>Medium Blog</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Banner heading={heading} subheading={subheading} logo={logo} />
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 md:gap-6 p-2 md:p-6">
        {posts.map(({ sys: { id }, fields }) => {
          const { title, headline, slug, coverImage, author } =
            fields as IPostFields;

          const authorFields = author?.fields as IAuthorFields;

          return (
            <Link href={`/post/${slug}`} key={id}>
              <div className="group cursor-pointer border rounded-lg overflow-hidden">
                {coverImage && (
                  <Image
                    className="h-60 w-full object-cover group-hover:scale-105 transition-transform ease-out"
                    src={`https:${coverImage.fields?.file?.url}`}
                    alt={coverImage.fields?.title as string}
                    width={400}
                    height={240}
                  />
                )}
                <div className="flex justify-between p-5 bg-white">
                  <div>
                    <p className="text-lg font-bold">{title}</p>
                    <p className="text-xs">{`${headline}`}</p>
                  </div>
                  {authorFields.image && (
                    <Image
                      className="h-12 w-12 rounded-full"
                      src={`https:${authorFields.image.fields.file?.url}`}
                      alt={authorFields.name}
                      width={48}
                      height={48}
                    />
                  )}
                </div>
              </div>
            </Link>
          );
        })}
      </div>
    </div>
  );
}

export const getStaticProps: GetStaticProps = async () => {
  const heroHeader = await client.getEntries({
    content_type: "heroHeader",
  });

  const posts = await client.getEntries({
    content_type: "post",
  });

  return {
    props: {
      heroHeader: heroHeader.items[0].fields,
      posts: posts.items,
    },
  };
};
